{#
/**
 * @file
 * Theme implementation for an 'diplo search input' custom element.
 *
 * Available variables:
 * - attributes: A list of HTML attributes for the input element.
 * - children: Optional additional rendered elements.
 * - config: An array of custom properties, includes
 *   - collapsed: A flag for init showing/hiding a search input
 *   - search_api_autocomplete: A flag defining wether search_api_autocomplete plugin is enabled 
 *   - icon: An icon to use, set on configuration
 *   - border: A border css class to use
 *   - background: A background-color css class to use
 *   - fs: A font-size css class to use
 *   - mw: Max width css class to use
 *
 * @see template_preprocess_nk_tools_search_input()
 *
 * @ingroup themeable
 */
#}

{%
  set wrapper_classes  = [
    config.border and config.border_classes is not empty ? config.border_classes,
    config.background ? config.background : 'bg-light-grey',
    config.icon ? 'row between-xs middle-xs',
    config.fs
  ]
%}

{%
  set input_classes = [
    'absolute',
    'right-1',
    'col-xs-10',
    'pl-8',
    'no-border',
    config.fs,
    config.mw,
    config.collapsed ? nk_tools.hidden_class, 
    config.search_api_autocomplete ? 'form-autocomplete',
    config.search_api_autocomplete ? 'ui-autocomplete-input',
  ]
%}

{% 
  set icon_classes = [
    'mt-8',
    'mr-16',
    'pointer',
    'col-xs-1',
    'end-xs',
    'toggle-search',
    'search-icon',
    'icons',
  ]
%}

<div {{ create_attribute({'class': wrapper_classes}) }}>
  {% set type_attribute = config.input_type ? config.input_type : 'search' %}
  <input{{ attributes.addClass(input_classes).setAttribute('type', type_attribute) }} />

  {% if config.icon %}
    <a {{ create_attribute({'class': icon_classes}) }}><i class="material-icons {{ nk_tools.animate_class }}" data-icon-alter="close" data-in="bounceIn">{{ config.icon }}</i></a>
  {% endif %}

</div>

{{ children }}